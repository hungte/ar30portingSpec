
行列輸入法Porting規格                          廖明德  01/18/2017 修訂

  本規格檔源於1989年倚天中文時代的行列30輸入法的規格，因多年來作業系統
已大幅變動，故於本年重新檢視作部份修訂，請葉光哲(老刀)協助核對，並聲明
本規格檔僅為基本架構的建議規格，系統設定及顯示可依各系統環境及特性作調
整。

■本輸入法相關檔案介紹

  PORTING.TXT 規格說明，本檔案
  其他(如下列)檔案都在 http://www.array.com.tw/BOX/BOX5.htm 內。
  詳細請看該資料夾內的行列輸入法Unicode原始對照表的說明檔。
  array30_27489.txt = 2byte字集含Unicode Extension A字集編碼
  array30_ExtB.txt  = Unicode Extension B 字集編碼
  array30_ExtCD.txt = Unicode Extension C及D 字集編碼
  array30_ExtE.txt  = Unicode Extension E 字集編碼
  arrayhw.txt       = 行列簡碼的原始檔(一級簡碼及二級簡碼合併檔)
  ar30symbol.txt    = 行列30特殊符號對照表

■輸入法切換相關控制鍵

  1.進入行列輸入模式：各系統一般採用 Ctrl+Shift 循環切換至各輸入法。
    早期倚天中文也採用[Alt]+[Ctrl]+[8]直接進入行列輸入模式。
  2.切換中英文輸入模式：[Ctrl]+[space]
    有些系統提供單按 [Shift]鍵就可切換中英文輸入模式，行列並不建議，因
    [Shift]鍵本身經常被使用，當作切換鍵很容易造成錯誤。
  3.切換英數的全形半形模式：[Shift]+[space]。
　4.現今各系統也支援滑鼠或觸控方式來選用輸入法或輸入模式轉換。

■系統設定建議

  最好可設定行列碼的Unicode字集查找範圍。
  最好可設定是否開啟錯誤組字嗶聲提示的選項。
  最好可設定輸出字元是繁體或简体 (若能即時字碼轉換)。
  最好能提供自建詞的功能。

■按鍵回應顯示

  行列輸入法的字根鍵位是採用三排英文字母鍵及[,][.][/][;]這四個符號鍵，
而行列User腦海裡並沒有英文字母鍵，只有字鍵位置所在行與列的關係，所以在
顯示回應鍵位上，是以1個數字加一個代表上(^)、中(-)、下(v)的符號來標示，
如  1^ 1- 1v。顯示英文字母對行列的User並不友善。有些系統輸入法的界面甚
至已不作按鍵回應，可依系統慣例處理。

User按鍵  Ｑ　Ｗ　Ｅ　Ｒ　Ｔ　Ｙ　Ｕ　Ｉ　Ｏ　Ｐ
回應顯示  1^  2^  3^  4^  5^  6^  7^  8^  9^  0^   ← 「^」表示上排鍵

User按鍵  Ａ　Ｓ　Ｄ　Ｆ　Ｇ　Ｈ　Ｊ　Ｋ　Ｌ　；
回應顯示  1-  2-  3-  4-  5-  6-  7-  8-  9-  0-   ← 「-」表示中排鍵

User按鍵  Ｚ　Ｘ　Ｃ　Ｖ　Ｂ　Ｎ　Ｍ　，　．　／
回應顯示  1v  2v  3v　4v  5v  6v  7v  8v  9v  0v   ← 「v」表示下排鍵

                      ↑
                      └─ 數字表示行，如 4表示第4行

※鍵位標示是用半型數字加半型符號合併顯示。

■數字鍵

  在行列30輸入法模式下鍵盤上排數字鍵仍為輸入數字用，除了在選字的情況下
（符號、查詢狀態下）以外，按數字鍵就回應數字給User。
  如果在選字的狀態下，其所按的數字超出可選的範圍（例如只有三個重碼字，
卻按數字鍵「4」）,則Beep，告知超出選字範圍，請其重選，不可送上數字。
  在行列30輸入模式下，若按住 Shift鍵及上排數字鍵，應仍可輸入該鍵位上的
符號鍵。

■符號輸入處理

　當User按 [W]鍵，再按某個數字鍵時（不必按空白鍵），就將該組的前十個符
號依序顯示在輸入行，供User選擇，當User再按某個數字時，即代表要第幾個符
號。

按 [W]鍵後放開，再按數字鍵[1]， 出現標點符號組    　計28個
   [W]鍵      ，    數字鍵[2]  →   括號符號組    　計46個
   [W]鍵      ，    數字鍵[3]  →   一般符號組    　計34個
   [W]鍵      ，    數字鍵[4]  →   數學符號組    　計33個
   [W]鍵      ，    數字鍵[5]  →   方向符號組    　計18個
   [W]鍵      ，    數字鍵[6]  →   單位符號組    　計31個
   [W]鍵      ，    數字鍵[7]  →   圖表符號組    　計77個
   [W]鍵      ，    數字鍵[8]  →   順序符號組    　計52個
   [W]鍵      ，    數字鍵[9]  →   希臘符號組    　計98個
   [W]鍵      ，    數字鍵[0]  →   注音符號組    　計42個
 
  例如敲[Ｗ]鍵再敲數字鍵[１]即顯示：
                                           「>」符號表示有下頁
                                                      │
------------------------------------------------------↓-----
  [行][半]   1， 2、 3。 4． 5‧ 6； 7： 8？ 9！ 0︰  < >
                                                       ↑
                                            「<」符號表示有上頁

  這時候，如果User再按數字鍵[9]，表示他要第 9個符號 「！」

◆翻頁查找的處理 (字的查詢功能及超頁重碼字都比照本規則處理)

  如果首頁顯示的符號(或字)User未選，卻再按個 [Space]鍵，那麼程式就繼續
把依序的另外十個抓出來顯示待User選用。如果User再按 [Space]，就是再往下
翻頁。如果已到最後一頁，再按 [Space]，就循環回到第一頁，也就是顯示最前
面的十個。
  輸入視窗可以用「<」、「>」來標示還有前頁或後頁。
  除了 [Space]，翻頁的控制鍵還有：
  按[PgDn]鍵，或[Shift鍵]+[右方向鍵]為翻下頁。
  [PgUp]鍵，或[Shift鍵]+[左方向鍵]為翻前頁，直到最前頁為止。

■輸入中幾個控制鍵的作用

※按 [Space]是代表該字的字根鍵已輸入完畢，即進行搜尋對照表並顯示字的動
作，如果沒重碼字就直接送上該字，如果有重碼字再進一步處理。如果查不到符
合的字就Beep(可顯示"無此字")，結束該次輸入程序。
※按[BackSpace]鍵，就回復到上一個按鍵處理程序的狀況。
※按[Esc]就清除正在處理的字的輸入程序，讓User重新輸入。

◆當按了[Space]鍵，出現重碼字時，再加按[Space]鍵，即將第一個重碼字送上
  ，功能跟按數字鍵[1] 的結果一樣。
  例如：
         按[I][F]兩鍵（行列碼 81 4-），再按[Space]，就出現____________________________________________________________
  [行][半]     1針 2羊 3并

  這時候再按 [Space] 就將第一個重碼字「針」送上。當然如果按數字鍵[1]，
也是將「針」字送上。

■一個字按鍵輸入的處理過程

【按第一個字根鍵】...一級簡碼請參考 arrayhw.txt 檔案的說明

  行列輸入法有一級簡碼字，當User按下第一個字根鍵時，即到簡碼檔將該鍵的
10個一級簡碼字抓出，顯示在輸入法視窗。
  如果這時User直接按數字鍵選字，就直接把所選對應的字送上。
  如果User是按 [Space]，就去行列字碼對照表搜尋剛好是這個單鍵的字，如果
沒有重碼字，就直接上字。如果有重碼字，就進入重碼字處理程序(下頁)。
  如果找不到符合的編碼，就嗶一聲提醒使用者，並結束輸入程序請使用者重新
輸入，其實單鍵字不可能沒有符合的字，只是此為通用規則故列於此。

【按第二個字根鍵】...二級簡碼請參考 arrayhw.txt 檔案的說明

  行列輸入法有二級簡碼字，當User按下第二個字根鍵時，就到簡碼的對照表，
去把對應這兩鍵開頭的二級簡碼字找出來，依序顯示在輸入法視窗。
  如果這時User直接按數字鍵選字，就直接把對應序位的字送上。
  如果User是按 [Space]，就去主對照表搜尋剛好是這兩鍵的字，如果沒有重碼
字，就直接上字。如果有重碼字，就進入重碼字處理程序。其餘處理比照前述。

【按第三個字根鍵】

  如果User接下來繼續按第三個字根鍵(尚未按 [Space]鍵)，就將剛好符合這三
鍵的字找出，顯示在輸入法視窗，讓User可以「預視」。如果這時User直接按數
字鍵，就把所對應序位的字送上，這種未按 [Space]即可將重碼字選上的功能叫
作「預選」。
 當User按了 [Space]，處理同前所述。


【按第四個字根鍵】

  如果User接下來繼續按第四個字根鍵，那麼就將剛好符合這四鍵的字找出，先
顯示在輸入法視窗，讓User「預視」及「預選」。
  當User按了 [Space]，處理同前所述。

【按第五個字根鍵】
 
  目前各系統都支援Unicode Extension，這些大字集的行列編碼最長為五碼(最
後一碼固定為[I]鍵)，所以如果User接下來繼續按第五個字根鍵，那麼就將剛好
符合這五鍵的字找出，先顯示在螢幕下方讓User「預視」及「預選」。
  按五個鍵之後，如果按 [Space]，處理同前述。

■重碼字處理程序：

  當User至少敲下一個以上的字根鍵後，再按下 [Space]，輸入法程式去找出符
合該編碼的字有兩個以上，稱為重碼字。這時將重碼字依序顯示待選，並beep一
聲提醒User選字，如果User按某數字鍵就將對應序位的重碼字送上。
  如果所按的數字鍵超出重碼字的個數(例如只有3個重碼字卻按數字鍵[4])，應
即beep一聲請User重選，不可送上數字。
  如果有重碼字待選，User再加按一個[Space]就比照當作是按數字鍵[1]，送上
第一個重碼字。
  如果重碼字超出十個以上，按 [Space]就翻頁顯示下一頁，請參照前述十組符
號輸入的翻頁處理方式。
  如果有重碼字待選，不按數字鍵，而是繼續按下一個字根鍵範圍的鍵位，就送
上第一個重碼字(推定User要的是第一個重碼字)。
  重碼字跟無此字(詞)的提示聲最好不一樣，讓User憑聲音就可以判別。
 
■詢問鍵

  為了讓User在部份不知道的字根鍵位可以用Wildcard的觀念來處理，我們提供
了「?」及「*」來代替。

◆「?」是按左邊的 [Shift]鍵+[?]鍵，[？]鍵即[/]同鍵位。

  當User用了「?」鍵，程式就忽略該碼位不作比對，例如查找「勁」字：

  User心中想的    一 ?  工 ?
  按鍵顯示鍵位：[ 1- ?  1^ ? ]
  對應英文鍵位：[ A  ?  Q  ? ]
  此例只要第一個是[A]鍵，第三個是[Q]鍵的字都應查找出來依序顯示供其選用
，「勁」字必可在字集中找到。

◆「*」鍵是按左邊的 [Shift]鍵+[*] 鍵，[*]鍵即數字[8]同鍵位，依其放在字
根的最前面或其他位置而所代表的意義不同。

  「*」放在前面的意義是，它後面接下來所敲的１~４個字根鍵，不管次序都要
查找，也就是任何一個字，只要它記錄裡有那幾個鍵位碼，都要找出來，例如：

  User輸入鍵位：[ * 4^ 6^ 2-]
  對應英文鍵位：[ * R  Y  S ]
  坑=[R Y S]，望=[Y S M R]，境=[R Y P S]，壅=[Y S X R]，諜=[Y R S V]
  這五個字都含有[R]&[Y]&[S] 三個鍵位，雖然次序各不同。

  也可以用[* R Y]或[* R] 查詢，即[*]鍵後面可以接 １～４個字根鍵。

  「*」放在前面之外的位置，可展開成多種「?」的查詢，例如：

  例一：User輸入鍵位：[ 4^ *  2-]
 　　　 對應英文鍵位：[ R  *  S ]
  解譯為查找包括[R ? S]及[R ? ? S]，即只要第一鍵是[R]，最後一鍵(包括第
三鍵或第四鍵是[S]都符合，但不包括 R S，中間一定要有字根鍵碼才算。

  例二：User輸入鍵位：[ 4^ 6^ *  2-]
  　　　對應英文鍵位：[ R  Y  *  S ]
  解譯為查找[R Y ? S]，因末碼為[S]僅四碼字可能，五碼字末碼一定是[I]。
  相同的[R * P S] =[R ? P S]。

  例三：User輸入鍵位：[ 4^ 6^ *  8^]
        對應英文鍵位：[ R  Y  *  I ]
  這種情況可解譯為查找 [R Y ? I]及[R Y ? ? I] 兩種碼態，只有最後代碼為
[I]的才需要解譯成查找五碼字。

  例四：User輸入鍵位：[ 4^ * ]
        對應英文鍵位：[ R  * ]
  這種情形只要是[R]開頭的所有字都要查找出來，包括五碼字也要出來。

◆以「?」及「*」的方式輸入，如果僅有一個字符合，當然就直接送上本文區，
但一般都會出現幾個到幾十個符合條件的字，這時候比照重碼字及符號輸入的方
式處理。
  「*」跟「?」不併存，如果已用了「*」號，後面就不接受「?」，如果已用了
「?」，後面就不接受「*」。
  問號可以有好幾個，但星號只能用一個。

◆只有按左邊的[Shift]+[？]才是攔下來作行列的詢問鍵[?]來處理，同樣的，
只有左邊的[Shift]+[*]才是行列的詢問鍵[*]。
  而右邊的[Shift]+[?]鍵仍作為一般輸入「?」符號用，按右邊的[Shift]+[*]
也是仍用來輸入「*」符號用。
  但是如果系統無法分別左右的[Shift]，則一律當作詢問鍵用，要輸入「?」符
號只好轉到[英數]模式下去輸入了。

■輸入詞的處理

  行列輸入法如果能夠提供詞最好，以下是行列詞的原始規格說明，若系統對詞
的作法有配合輸入法界面一致的考慮，可作調整。

◆詞鍵
┌──┐
│ "  │左列鍵位作為詞終結鍵（即「；」與「Enter」鍵中間的鍵)。
│ '  │行列在輸入完字根鍵後，敲 [Space]鍵就抓字，敲詞鍵就抓詞，字詞分
└──┘家互不干擾不致增加重碼。
 
◆行列詞庫檔的結構

  ◇檔名定為 ARRAY30.BOX ，User可以在文書處理下自建或更改新增。
  ◇User可以將已排序過的詞庫放在前段(例如本公司所建的六萬個詞)，中間空
    一行，在這一行的最前面，加上一個雙截棍「|」號隔開，「|」號後面則可
    任意加入自建詞，不須要排序。

 ┌────────┐
 │「|」號前面的是 │ 例如已排序過的60000個詞，放在前段
 │經過排序的詞    │
 └────────┘
 |                 ←中間隔一行，這一行只在最前面打個「|」號
 ┌────────┐
 │ 自建詞         │ 「|」號後面User可以任意加詞，不必管順序
 │ 不經過排序     │
 └────────┘


 ◇當載入行列時，只要 ARRAY30.BOX 檔案存在時，就要將它抓進記憶體。
 ◇系統將 ARRAY30.BOX 搬到記憶體的同時，一面將索引檔建立，由於資料檔是
   排序過的，所以只要依 A B C ....X Y Z , . / ; 的行列鍵位序，記載30區
   的 Start Point，以及「|」後不排序區的 Start Point，共31區，如此每次
   只要搜尋特定字母開頭的一區，加上不排序區，速度絕對夠快了。
 ◇在抓進記憶體時，同時檢查資料檔
   1.如果在「|」之前，發現有不照順序排序的資料（只檢查第一個字母即可）
     ，則顯示「行列詞庫內容有誤，或"|"之前的資料，未經排序，無法使用」
     。
   2.雖然順序正確，仍應檢查詞是否符合下列三項編碼規格，只載入符合規格
     的詞。不符合就跳過。
     a.前面的 key ，長度在四鍵以內
     b.而且KEY 的字母，一定是在行列的30個鍵範圍內。
     c.key 後面一定要接一個空白，和詞內容隔開

◆詞庫編碼的格式

 ◇行列詞庫是依照下列的格式來編的，自建詞要在「|」號行的下一行開始編：

 |
 A 
 .ALO 行列科技
 PULP 明白
 A;   一口
 CFF  小草
 RDYP 靜夜思：床前明月光，疑是地上霜，舉頭望明月，低頭思故鄉
  84年2月1日建檔

 說明：

 ┌前面為1到4個鍵位碼，鍵位碼以大寫英文字母表示，須為行列30個鍵以內。
 │
 │  ┌─中間以空白隔開
 ↓  ↓
 .ALF 行列科技
      ↑
      └第６個位置開始是記錄所設的詞，這是建議User的標準格式，而系統處
        理則是考慮在第一個空白後面即視為詞內容，例如User可能編成：
 A; 一口
 CFF 小草

  詞的長度最多可到 250個 Bytes，而在輸入時，輸入視窗的顯示則僅以顯示的
範圍為限，顯示各詞的前幾個字，但上到作業區則是完整的內容。

 ____________________________________________________________________
   [行]【半】  1.靜夜思：床前明月光，疑是地上霜，        ＜＞

      本畫面所顯示的  ＜＞ ，是代表這個詞有前頁及後頁

  ‧如果有下頁，就會顯示"＞"，如果有上頁，就會顯示"＜"。
  ‧詞內容可以是單字、中文、英文、數字、符號等。
  ‧如果開始的第1個Byte 是空白的，表示該列是註記列。
  ‧注意User可能只用自建詞，不經排序，即詞檔一開始就打 "|"號，程式要考
    慮這種情形。
  ‧在User未按【'】詞鍵之前，都當作字的處理，接收到他按【'】鍵時，就先
    終結掉字的處理程序，清除輸入視窗，再到詞庫資料檔裡去找尋符合的詞。
  ‧例如「明白」這個詞的編碼是「PULP」
     .當USER打完「PULP」四鍵後，接著按下【'】詞的終結鍵。
     .這時系統就要到詞的資料庫裡去找出符合「PULP」這四個鍵的詞，「明白
      」這個詞就會被找出來。
     .如果這時候，找出符合「PULP」的詞不止一個，那麼就要分別將這些重碼
      詞依序顯示在狀態欄內，讓User按數字鍵選上。
  ‧在有重碼詞待選的情況下，如果一頁就可顯示完畢的，再加按 [Space]則上
    第一個重碼詞，如果有兩頁以上的，按 [Space]就作翻頁，也就是說，如果
    有兩頁以上的，要第一個詞只好按數字鍵 1來選，這樣作是為了和重碼字加
    按[Space]，上第一個字的習慣一致。
  ‧重碼字詞的顯示如果超過一頁，比照符號及字的翻頁處理。
  ‧抓不到詞時應出現「無此詞」，並有Beep聲提示。
