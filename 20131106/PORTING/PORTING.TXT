行列輸入法 PORTING 規格                        廖明德      02/15/1995

一級簡碼及二級簡碼合併成一個簡碼檔
含詞的輸入功能

■本磁片內容的各檔案介紹■

PORTING.TXT   規格說明，本檔案
ARRAY30.TXT   行列輸入法依鍵位排序的原始檔（含容錯），系統使用時要將它
              改名為 ARRAY30.TAB
ARRAYHW.TXT   簡碼的原始檔

■前言■

  本規格所使用的對照表(ARRAY30.TXT），是直接以行列碼的英文鍵位對照內碼
方式來作。

  進入行列的控制鍵請用 ALT+CTRL + 8 來處理，以求各家中文一致，方便使用
者。另外一個方式就是用 CTRL+SHIFT 循環切換。

  實際運作的行列輸入法對照表最好一致用 ARRAY30.TAB的名稱，以讓使用者在
不同系統中可以很容易知道那是行列輸入法的對照表。

  因行列輸入法有舊版的行列，及新版「行列30」，所以輸入法在螢幕下方顯示
時，最好跟倚天一樣，用 [行列30] 來標示，以讓使用者容易辨識。
  有任何問題歡迎您隨時與我們聯絡。 我們的電話號碼是 (02)7949625

  本規格包括「行列詞輸入」的功能，如果能提供最為完美。

■按鍵回應顯示

  行列輸入法在User腦海並沒有英文字母鍵，只有行跟列的關係，所以我們回應
鍵位的顯示是 1個數字加一個代表上、中、下的箭頭符號來標示。
    如果不能用半形的 ASC(24)  及 ASC(25)  來表示，則可用上(^)下(v)來
代替，如 1^ 1- 1v 。最勉強的是顯示英文字母，那對行列的使用者並不親善。

User按鍵  Ｑ　Ｗ　Ｅ　Ｒ　Ｔ　Ｙ　Ｕ　Ｉ　Ｏ　Ｐ
回應顯示  1  2  3  4  5  6  7  8  9  0   ← 「」表示上排鍵

User按鍵  Ａ　Ｓ　Ｄ　Ｆ　Ｇ　Ｈ　Ｊ　Ｋ　Ｌ　；
回應顯示  1-  2-  3-  4-  5-  6-  7-  8-  9-  0-   ← 「-」表示中排鍵

User按鍵  Ｚ　Ｘ　Ｃ　Ｖ　Ｂ　Ｎ　Ｍ　，　．　／
回應顯示  1  2  3　4  5  6  7  8  9  0   ← 「」表示下排鍵

                      ↑
                      └─ 數字表示行，如 4表示第4行

※鍵位標示是用ASC Code的 1Byte數字加 1Byte的半型箭頭符號合併顯示，並不
  是一個 2 Bytes的全形符號。

■數字鍵

  在行列30輸入法模式下鍵盤上排數字鍵仍為輸入數字用，除了在選字的情況
下（符號、查詢狀態下）以外，按數字鍵就回應數字給User。
  如果在選字的狀態下，其所按的數字超出可選的範圍（例如只有三個重複字，
卻按數字鍵「4」）,則BEEP，告知超出選字範圍，請其重選，不可送上數字。

■符號輸入處理■

    當User按 [W]鍵，再按某個數字鍵時，就將該組的前十個符號依序顯示在輸
入行，供User選擇，當User再按某個數字時，即代表要第幾個符號。

                                 ***以 Big-5 Code為例 ***

按 [W]鍵 後，再按 數字鍵[1] ，出現標點符號組    A141 ∼ A15C　計28個

   [W]鍵     +    數字鍵[2]  →   括號符號組    A15D ∼ A1AC　計46個

   [W]鍵     +    數字鍵[3]  →   一般符號組    A1AD ∼ A1CE　計34個

   [W]鍵     +    數字鍵[4]  →   數學符號組    A1CF ∼ A1EF　計33個

   [W]鍵     +    數字鍵[5]  →   方向符號組    A1F0 ∼ A242　計18個

   [W]鍵     +    數字鍵[6]  →   單位符號組    A243 ∼ A261　計31個

   [W]鍵     +    數字鍵[7]  →   圖表符號組  ┌A262 ∼ A2AE　計43個
                                              └F9DD ∼ F9FE  計34個(倚天增加)
   [W]鍵     +    數字鍵[8]  →   順序符號組  ┌C6A1 ∼ C6BE　計30個(倚天增加)
                                              └A2B9 ∼ A2CE  計22個

   [W]鍵     +    數字鍵[9]  →   希臘符號組    A344 ∼ A373　計48個

   [W]鍵     +    數字鍵[0]  →   注音符號組    A374 ∼ A3BF　計42個

  註：如果沒有倚天增加的字形，F9DD∼F9FE，則可略過。

  倚天及C-WIN 3.1 是以CMEX規格來作，所以每次顯示九個符號，超過九個就
換頁顯示，但如果系統是一次顯示10個字的，那麼也就用10個的方式來處理。
　當User按 [W]鍵，再按某個數字鍵時（不必按空白鍵），就將該組的前九個
符號（或十個，依系統規格）依序顯示在輸入行，供User選擇，當User再按某
個數字時，即代表要第幾個符號。

  　　　 ┌─┐　　┌─┐　
  例如按 │Ｗ│ 及 │１│   即顯示：
         └─┘    └─┘                           「 >」符號表示有下頁
                                                                    │
--------------------------------------------------------------------↓-----
  [行列30] 【半形】  鍵位：  1， 2、 3。 4． 5• 6； 7： 8？ 9！   < >
                                                                   ↑
                                               如果有「<」符號表示有上頁

  這時候，如果User再按數字鍵[9]，表示他要第 9個符號 「！」

  如果User未選，卻再按個 [Space]鍵，那麼程式就繼續把該組依序的另外 9個
符號抓出來顯示，等待User作選擇。只要User按 [Space]，就是往下翻頁。如果
已到最後一頁，再按 [Space]，就回到第一頁，也就是顯示前面的九個。

注意：行列輸入法的符號輸入，以及查詢模式下，都有數頁才能顯示完的重複字
      ，即狀態欄有「<」、「>」符號表示的，按空白鍵代表翻頁。
      如果找出來的字，只要一頁就可顯示完，那麼按空白鍵就是上第一個字。

     第一頁（1∼9）            第二頁（10∼18）
         ┌───┐                ┌───┐
      按 │Space │ ─→        按 │Space │
         └───┘                └───┘
           ↑                         │
           │                         ↓
     最後頁
     第四頁（28∼36）           第三頁（19∼27）
         ┌───┐                ┌───┐
      按 │Space │       ←─  按 │Space │
         └───┘                └───┘

如果User按

      ┌───┐     ┌───┐
      │  ↑  │ 及  │  ＜  │      代表回到上一頁，直到最前頁為止。
      │Shift │     │  ，  │
      └───┘     └───┘

      ┌───┐     ┌───┐
      │  ↑  │ 及  │  ＞  │      代表翻到下一頁，直到最後一頁為止。
      │Shift │     │  ．  │
      └───┘     └───┘


---------------------------------------------------------------------
■輸入中幾個控制鍵的作用■

※按空白鍵是代表該字的按鍵已輸入完畢，即進行搜尋對照表並顯示字的動作，
  有重複再進一步處理。
※按['] 鍵，即代表使用者要的是「詞」，應進入詞的處理程序。
※如果按[BackSpase]鍵，就回復到上一個按鍵處理程序的狀況。
※如果按[ESC]就清除正在處理的字的輸入程序，讓User重新輸入。

● 當按了[SPACE]鍵，出現重複字時，再加按[SPACE]鍵，即將第一個重複字送
   上，功能跟按數字鍵1  的結果一樣。
   例如：
         按 IF 兩鍵（行列碼 81 4-），再按空白鍵，就出現
_____________________________________________________________________
  [行列30] 【半形】  1針 2羊 3并

  這時候再按 空白鍵 就將第一個重複字「針」送上。當然如果按 數字 1 ，也
  是將「針」字送上。

■一個字輸入四個鍵的處理過程■

【按第一個字根鍵】...一級簡碼請參考 ARRAYHW.TXT 檔案的說明

  行列輸入法有一級簡碼字，當User按下第一個字根鍵時，立即要到簡碼檔將該
  鍵的10個簡碼字抓出，顯示在螢幕的最底行。
    如果這時User直接按數字鍵選字，就直接把所選對應的字送上。
    如果User是按空白鍵，就去主對照表(ARRAY30.TAB) 搜尋剛好是這個單鍵的
    字，如果沒有重複，就直接上字。
      如果有重複，就beep一聲,提醒User選字。
      在有重複字待選的狀態下，再加按空白鍵等於按數字鍵1，送上第1個字。
      如果不選繼續下一個字的輸入，就送上第一個字。

【按第二個字根鍵】...[二級簡碼請參考（ARRAYHW.TXT）檔案的說明]

  行列輸入法有二級簡碼，當User按下第二個字根鍵時，就到簡碼的對照表，去
  把對應這兩鍵開頭的二級簡碼字找出來，依序顯示在螢幕底行。
    如果這時User直接按數字鍵選字，就直接把所選對應的字送上。
    如果User是按空白鍵，就去主對照表搜尋剛好是這兩鍵的字。
  其餘處理同前所述。

【按第三個字根鍵】

  如果User接下來繼續按第三個字根鍵，那麼就將剛好符合這三鍵的字找出，顯
  示在螢幕底行，讓User可以「預視」。如果這時User直接按數字選鍵，就直接
  把所對應的字送上（這種未按空白鍵即可將重複字選上的功能叫作「預選」) 。
  其餘處理同前所述。

【按第四個字根鍵】

  如果User接下來繼續按第四個字根鍵，那麼就將剛好符合這四鍵的字找出，先
  顯示在螢幕下方讓使用者「預視」及「預選」。
  當使用者按了空白鍵，沒有重複就將字送上，有重複就BEEP提醒User選字，
  在有重複字待選的情況下，再加按空白鍵等於按數字鍵1，送上第1個字。
  如果不選繼續下一個字的輸入，就送上第一個字。

  因為在WINDOWS NT版及UNIX版的系統上，其罕用字集的字，行列碼是要按五個
  鍵，所以按四個鍵的字，仍要按空白鍵才上字。另外因為行列有詞彙輸入，所
  以按四個之鍵之後，如果按空白鍵就確定是把字送上，如果按 [']詞鍵，那麼
  就要去搜尋詞庫檔了，後面有「行列詞彙的輸入」專節說明。

■詢問鍵■

  為了讓使用者在部份不知道的字根鍵位可以用Wildcard 的觀念來處理，我們
提供了「?」及「*」來代替。

   「?」是按左邊的 [Shift鍵]+ [?]鍵位，在螢幕下方鍵位處顯示「?」 ，它可
以用來代替四個字根鍵的任何一個，也可以同時用多個 「?」，最多可以連續打
四個問號，當然實際運用因符合的字太多並無義意。但程式還是要處理。
  當使用者按了「?」鍵，那麼程式就忽略該鍵，不作比對，例如「勁」字：

使用者心中想的    一 ? 工 ?
螢幕顯示鍵位：    1- ? 1 ?
對應英文鍵位：    A  ?  Q ?
                  ↑    ↑       第二個字根鍵及第四個字根鍵忽略不比，
                  └──┴─── 只要第一個是[A]鍵，第三個是[Q]鍵的字
                                 都是符合User所期望，要找出來依序顯示
                                 ，供其挑選，如果符合的字超過九個，就
                                 待按[SPACE]鍵，往下翻頁顯示。


  「*」鍵 是按左邊的 [Shift]鍵 + [8] 鍵 ，依其放在字根的最前面或其他位
置而所代表的意義不同。

  「*」 放在前面的意義是，它後面接下來所敲的１∼３字根鍵，不管次序都合
於User期望，也就是任何一個字，只要它記錄的鍵位，有那幾個鍵，就算合於搜
尋條件，例如：

   使用情形                    │   說明：
                               │
  User輸入  鍵位： * 4 6 2-  │   坑 R Y S       ┐
  對應英文鍵位是： *  R  Y  S  │   望 Y S M R     ┤  這五個字都含有
                               │   境 R Y P S     ┤  R Y S 三個鍵位，
                               │   壅 Y S X R     ┤  雖然次序各不同。
                               │   諜 Y R S V     ┘

  也可以用  * R Y 或 * R 查詢，即 * 號後面可以接 １∼３個字根鍵。

   「*」放在前面之外的位置，所代表的意義是：同時代表多種未確定鍵位查詢
，當然有時也可能僅代表一種查詢。

   使用情形（一）              │   說明：
                               │
  User輸入  鍵位： 4 * 2-     │ 只要 第一鍵是 R ，最後一鍵是 S，都符合
  對應英文鍵位是： R  *  S     │ 搜尋條件，即搜尋以下兩種情況，因為行列
                               │ 每個字最多只有四個字根鍵。
                               │
                               │   R ? S
                               │   R ? ? S
                               │註：不包括 R S，中間一定要有字根才算。

   使用情形（二）              │   說明：
                               │
  User輸入  鍵位： 4 6 * 2-  │ 這種情況 [*] 只可能代表一種查詢：
  對應英文鍵位是： R  Y  *  S  │ 即 R Y * S = R Y ? S
                               │ 所以這種用法跟 R Y ? S 結果完全一樣。
                               │ 相同的 R * P S = R ? P S
                               │        R Y P * = R Y P ?
                               │ 當 [*] 位置只留下一個未知鍵位，那麼
                               │ 它的功能就等於 [?] 了。

   使用情形（三）              │   說明：
                               │
  User輸入  鍵位： 4 6 *     │ 這種用法，程式要作兩種搜尋：
  對應英文鍵位是： R  Y  *     │
                               │    R Y ?  （起始兩鍵是 R Y 的字）
                               │    R Y ? ?（同               上）
                               │
                               │ 註：不包括 R Y，後面有接字根才算
                               │
                               │ 如果打 R *  那麼要搜尋三種情況：
                               │
                               │        R ?     （起始鍵是 R  的字）
                               │        R ? ?   （同            上）
                               │        R ? ? ? （同            上）

  以「?」及「*」的方式輸入，如果僅有一個字符合，當然就直接送上本文區，
但一般都會出現幾個到幾十個符合條件的字，這時候依照 CMEX 的規格，每次依
序顯示 9個字，分別在字的前面用1∼9的數字來標示順序，供User選用，如果再
按數字鍵，就將該數字對應的字送上本文。（如果系統是一次顯示10個的，那麼
也就用10個的方式來處理。

  查詢的情況下，經常會有一頁顯示不完的情形，翻頁的處理跟符號輸入的翻頁
處理一樣，仍用空白鍵或[Shift]+[<]及[Shift]+[>]來處理。

  「*」跟「?」不併存，如果已用了「*」號，後面就不接受「?」，如果已用了
「?」，後面就不接受「*」。
  問號可以有好幾個，但星號規定只能用一個。



注意：只有按左邊的[Shift] + [/]才是攔下來作行列的詢問鍵[?]來處理，同樣
      的，只有左邊的[Shift] + [8]才是行列的詢問鍵[*]。
      而右邊的[Shift] + [/], 仍作為一般輸入半形的「?」的符號用，按右邊
      的[Shift] + [8]也是仍用來輸入半形的「*」用。
      但是如果系統無法分別左右的 [Shift]，則不必分別，一律當作詢問鍵用
      。要輸入半形的「?」，則只好轉到[英數]模式下去輸入了。

●注意事項：
  □找不到該輸入碼應顯示「無此字(詞)」。
  □重複跟無此字(詞)的叫聲最好不一樣，讓User憑聲音就可以判別。
  □當使用者按了四個字根鍵，一定接著要按空白鍵或「'」詞終結鍵作區別，
    否則不接受。並beep警告。
  □在出現選字的情況下：如果重複字在一頁以內，按空白鍵就是上第一個字，
    如果有超過一頁的，按空白鍵則是往下翻頁，這種邏輯可處理各種重複：
    1.輸入完字的所有鍵位，按下空白鍵後出現的重複字。
    2.符號的輸入，每一組符號都是超過十個，所以按空白鍵時就變成翻頁。
    3.查詢模式下，如果不超過一頁，按空白鍵是上第一個字，如果超過一頁則
      變成翻頁。最後一頁按空白鍵又回到第一頁。
    4.重複詞也一樣，一頁以內上第一個詞，超過一頁就作翻頁。

■輸入詞的處理

  行列如果能夠提供詞最好，以下是PORTING 詞的說明。

●行列詞庫檔的結構

  ◇檔名定為 ARRAY30.BOX ，使用者可以在文書處理下直接自建或更改新增。

  ◇使用者可以將已排序過的詞庫放在前段(例如本公司所建的六萬個詞)，中間
    空一行，在這一行的最前面，加上一個雙截棍「|」號隔開，「|」號後面則
    可任意加入自建詞，不須要排序。

 ┌────────┐
 │「|」號前面的是 │ 例如已排序過的60000個詞，放在前段
 │經過排序的詞    │
 └────────┘
 |                 ←中間隔一行，這一行只在最前面打個「|」號
 ┌────────┐
 │ 自建詞         │ 「|」號後面使用者可以任意加詞，不必管順序
 │ 不經過排序     │
 └────────┘

 ◇當載入行列時，只要 ARRAY30.BOX 檔案存在時，就要將它抓進記憶體，並且
   優先使用 XMS，如果記憶體不足，應顯示「記憶體不足，行列詞庫無法載入」。
 ◇系統將 ARRAY30.BOX 搬到記憶體的同時，一面將索引檔建立，由於資料檔是
   排序過的，所以只要依 A B C ....X Y Z , . / ; 的行列鍵位序，記載30區
   的 Start Point，以及「|」後不排序區的 Start Point，共31區，如此每次
   只要搜尋特定字母開頭的一區，加上不排序區，速度絕對夠快了。
   （中文詞有數十萬個，必需作此考慮，速度才會快到足以實用）
 ◇在抓進記憶體時，同時檢查資料檔
   1.如果在「|」之前，發現有不照順序排序的資料（只檢查第一個字母即可）
     ，則顯示「行列詞庫內容有誤，或(|)之前的資料，未經排序，無法使用」。
   2.雖然順序正確，仍應檢查詞是否符合下列三項編碼規格，只載入符合規格
     的詞。不符合就跳過。
     a.前面的 key ，長度在四鍵以內
     b.而且KEY 的字母，一定是在行列的30個鍵範圍內。
     c.key 後面一定要接一個空白，和詞內容隔開

○詞庫編碼的格式

 ◇行列詞庫是依照下列的格式來編的，自建詞要在「|」號行的下一行開始編：

 |
 A ヤ
 .ALO 行列科技
 PULP 明白
 A;   一口
 CFF  小草
 RDYP 靜夜思：床前明月光，疑是地上霜，舉頭望明月，低頭思故鄉
  84年2月1日建檔

 說明：

 ┌前面為1到4個鍵位碼，鍵位碼以大寫英文字母表示，必須在行列的30個鍵以內。
 │
 │  ┌─中間以空白隔開
 ↓  ↓
 .ALF 行列科技
      ↑
      └第6個位置開始是記錄所設的詞，這是建議使用者的標準格式，而系統處理
        則是考慮在第一個空白後面即視為詞內容，例如使用者可能編成：
 A; 一口
 CFF 小草
    詞的長度最多可到 250個 Bytes，即 125個中文字。而在輸入時，輸入視窗
的顯示則僅以顯示的範圍為限，顯示各詞的前幾個字，但上到作業區則是完整的
內容。
 ____________________________________________________________________
   [行列30]【半形】  1.靜夜思：床前明月光，疑是地上霜，        ＜＞

      本畫面所顯示的  ＜＞ ，是代表這個詞有前頁及後頁_________↗

      △如果有下頁，就會顯示  ＞   ，如果有上頁，就會顯示  ＜
      △詞內容可以是單字、中文、英文、數字、符號等。
      △如果開始的第1個Byte 是空白的，表示該列是註記列，當程式啟動
        時，不要將它抓進Memory，如上例的「84年2月1日建檔」。
      △注意使用者可能只用自建詞，不經排序，即詞檔一開始就打「|」 號，
        程式要考慮這種情形。

                        ┌──┐
□執行詞庫的時機：按鍵以│ "  │作為終結鍵（即「；」與「Enter」鍵中間
  的鍵），以與字分別。  │ '  │
                        └──┘
  •當按完字根鍵後，如果按空白鍵就僅去搜尋字的對照表，如果按【'】 鍵則
    僅搜尋詞的對照表。
  •而在未按【'】 詞鍵之前，都當作字的處理，按第一個鍵要顯示一級簡碼，
    按第二個鍵要顯示二級簡碼，按第三個鍵或第四個鍵，如果有符合的字，要
    將它們預先顯示在螢幕下方讓使用者「預視」，尤其第四個鍵一定也要作「
    預視」，不可忽略。

  •如果User按完字根鍵之後，接著按【'】鍵， 就要先將字的處理部份終結掉
    ，清除狀態欄，再到詞庫資料檔裡去找尋符合的詞。
      例如「明白」這個詞的編碼是「PULP」
     .當USER打完「PULP」四鍵後，接著按下【'】 詞的終結鍵，即表示使用者
      要的是符合「PULP」這四個鍵的詞。
     .這時系統就要到詞的資料庫裡去找出符合「PULP」這四個鍵的詞，「明白
      」這個詞就會被找出來，送上作業區。
     .如果這時候，找出符合「PULP」的詞不止一個，那麼就要分別將這些重複
      詞依序顯示在狀態欄內，讓使用者按數字鍵選擇。
    •在有重複詞待選的情況下，如果一頁就可顯示完畢的，再加按空白鍵則是
      上第一個重複詞，如果有兩頁以上的，按空白鍵就作翻頁，也就是說，如
      果有兩頁以上的，要第一個詞只好按數字鍵 1來選，這樣作是為了和重複
      字加按空白鍵，上第一個字的習慣一致。
    •重複詞的顯示如果超過一頁，使用者也可以按 Shift「<」及「>」來翻頁
      雙向找尋，空白鍵只能單向往前找。
    •抓不到詞時應出現「無此詞」，並有Beep聲提示。
    •重複應有beep聲提示，最好與「無此詞」響聲不同。

